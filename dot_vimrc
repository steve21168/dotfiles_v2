set nocompatible              " be iMproved, required

filetype plugin indent on

let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')

Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'mileszs/ack.vim'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'tpope/vim-commentary'
Plug 'christoomey/vim-tmux-navigator'
Plug 'rafi/awesome-vim-colorschemes'
Plug 'ntpeters/vim-better-whitespace'
Plug 'kana/vim-textobj-user' | Plug 'kana/vim-textobj-line'
" Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
Plug 'sheerun/vim-polyglot'
Plug 'jeetsukumaran/vim-buffergator'
Plug 'milkypostman/vim-togglelist'
Plug 'arcticicestudio/nord-vim'
Plug 'kyazdani42/nvim-web-devicons' " for file icons
Plug 'kyazdani42/nvim-tree.lua'
Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
Plug 'neovim/nvim-lspconfig'
Plug 'williamboman/nvim-lsp-installer'
Plug 'hrsh7th/cmp-nvim-lsp'
Plug 'hrsh7th/nvim-cmp'
Plug 'hrsh7th/cmp-buffer'
Plug 'hrsh7th/cmp-path'
Plug 'hrsh7th/cmp-cmdline'
Plug 'L3MON4D3/LuaSnip'
Plug 'saadparwaiz1/cmp_luasnip'
Plug 'rafamadriz/friendly-snippets'
Plug 'windwp/nvim-autopairs'
Plug 'jose-elias-alvarez/null-ls.nvim'
Plug 'folke/which-key.nvim'
Plug 'nvim-lualine/lualine.nvim'
Plug 'lewis6991/gitsigns.nvim'
Plug 'nvim-lua/plenary.nvim'
Plug 'iamcco/markdown-preview.nvim', { 'do': 'cd app && yarn install' }

call plug#end()

" Native Vim Settings "
colorscheme nord
let mapleader = ' '
syntax on
set number
set encoding=utf-8
set noshowmode
set termguicolors
set nohlsearch
set noincsearch
set ttimeoutlen=0
set timeoutlen=500
set smartcase
set smartindent
set ignorecase
set updatetime=100 " Speed things up for vim gutter
set backspace=indent,eol,start " Normal backspace
set wildmenu
set wildmode=longest:full,full
set noswapfile
set norelativenumber
set autoread
set isk+=-
set cursorline
set splitbelow
set splitright
set expandtab " Make tabs indent with spaces
set tabstop=2 " Number of spaces for tab character
set shiftwidth=2 " Width when using > in normal mode
set softtabstop=2 " Set equal to tabspot
set listchars=space:.,eol:¬,tab:>·
set complete-=i
set hidden " Allows to move between buffers while editing
set relativenumber
set scrolloff=2
set inccommand=nosplit

if has("clipboard")
  set clipboard=unnamed " copy to the system clipboard
endif

" Key Mappings "
map <C-n> :edit.<CR>

" Normal Mappings "
nnoremap <C-n> :NvimTreeToggle<CR>
nnoremap <leader>R :NvimTreeRefresh<CR>
nnoremap <leader>n :NvimTreeFindFile<CR>" vim tree

nnoremap <leader>a gUiwe
nnoremap <leader>A guiwe
nnoremap <Leader>d *``cgn
nnoremap <leader>h :set list!<CR> " Show listchars
nnoremap <leader>n :bnext<CR>
nnoremap <leader>o <C-w>o
nnoremap <leader>p :bprevious<CR>
nnoremap <Leader>s :%s/\<<C-r><C-w>\>//gc<left><left><left>
nnoremap <leader>v :let @/ = ""<CR>
nnoremap <leader>x :bp <BAR> bd #<CR>
nnoremap <leader>X :bp <BAR> bd! #<CR>
nnoremap <Leader>/ *N
nnoremap ,f <C-w>\|
nnoremap ,s :sp<CR>
nnoremap ,v :vsp<CR>
nmap ,q cs"'<CR>
nnoremap ,x <C-w>x
nnoremap ,= <C-w>=
nnoremap ,c :call ToggleQuickfixList()<CR>
nnoremap ,p "0p<CR>
vnoremap ,p "0p<CR>
nnoremap ,yf :let @+ = expand('%')<CR>

cnoremap <C-b> <S-Left>
cnoremap <C-f> <S-Right>

" Visual mappings "
vnoremap <Leader>s "hy:%s/<C-r>h//gc<left><left><left>
vnoremap <Leader>/ y/<C-R>"<CR>N

augroup highlight_yank
    autocmd!
    au TextYankPost * silent! lua vim.highlight.on_yank{higroup="IncSearch", timeout=700}
augroup END

" Plugin Settings

if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif

let g:buffergator_suppress_keymaps = 1

set rtp+=$GOPATH/src/golang.org/x/lint/misc/vim

let g:toggle_list_no_mappings = 0

"" Git signs
highlight link GitSignsCurrentLineBlame Comment
